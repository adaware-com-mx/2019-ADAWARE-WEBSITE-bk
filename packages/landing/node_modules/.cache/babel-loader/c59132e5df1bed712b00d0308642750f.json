{"ast":null,"code":"import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\nimport Drawer from 'reusecore/src/elements/Drawer';\nimport Button from 'reusecore/src/elements/Button';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport HamburgMenu from '../../../components/HamburgMenu';\nimport ScrollSpyMenu from '../../../components/ScrollSpyMenu';\nimport { Container } from './navbar.style';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport SearchPanel from '../SearchPanel';\nimport LoginModal from '../LoginModal';\nimport LogoImage from '../../../assets/image/app/logo.png';\nimport { DrawerContext } from '../../../contexts/DrawerContext';\nimport data from '../../../data/App/MenuItems'; // Default close button for modal\n\nvar CloseModalButton = function CloseModalButton() {\n  return React.createElement(Button, {\n    className: \"modalCloseBtn\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-plus-symbol\"\n    })\n  });\n};\n\nvar CloseModalButtonAlt = function CloseModalButtonAlt() {\n  return React.createElement(Button, {\n    className: \"modalCloseBtn alt\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-plus-symbol\"\n    })\n  });\n};\n\nvar Navbar = function Navbar(_ref) {\n  var navbarStyle = _ref.navbarStyle,\n      logoStyle = _ref.logoStyle,\n      buttonStyle = _ref.buttonStyle;\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Search modal handler\n\n\n  var handleSearchModal = function handleSearchModal() {\n    openModal({\n      config: {\n        className: 'search-modal',\n        disableDragging: true,\n        default: {\n          width: '100%',\n          height: '100%',\n          x: 0,\n          y: 0\n        }\n      },\n      component: SearchPanel,\n      componentProps: {},\n      closeComponent: CloseModalButtonAlt,\n      closeOnClickOutside: false\n    });\n  }; // Authentication modal handler\n\n\n  var handleLoginModal = function handleLoginModal() {\n    openModal({\n      config: {\n        className: 'login-modal',\n        disableDragging: true,\n        default: {\n          width: '100%',\n          height: '100%',\n          x: 0,\n          y: 0\n        }\n      },\n      component: LoginModal,\n      componentProps: {},\n      closeComponent: CloseModalButton,\n      closeOnClickOutside: false\n    });\n  }; // Toggle drawer\n\n\n  var toggleHandler = function toggleHandler() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return React.createElement(NavbarWrapper, navbarStyle, React.createElement(Container, null, React.createElement(Logo, {\n    href: \"#\",\n    logoSrc: LogoImage,\n    title: \"Agency\",\n    logoStyle: logoStyle\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, React.createElement(Button, {\n    variant: \"textButton\",\n    onClick: handleSearchModal,\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-magnifying-glass\"\n    })\n  }), React.createElement(Button, {\n    variant: \"textButton\",\n    onClick: handleLoginModal,\n    icon: React.createElement(\"i\", {\n      className: \"flaticon-user\"\n    })\n  }), React.createElement(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: React.createElement(HamburgMenu, null),\n    open: state.isOpen,\n    toggleHandler: toggleHandler\n  }, React.createElement(ScrollSpyMenu, {\n    menuItems: data.menuItems,\n    drawerClose: true,\n    offset: -100\n  })))));\n}; // Navbar style props\n\n\nNavbar.defaultProps = {\n  navbarStyle: {\n    minHeight: '70px'\n  },\n  logoStyle: {\n    width: ['100px', '140px']\n  },\n  buttonStyle: {\n    minHeight: '70px',\n    color: '#fff'\n  }\n};\nexport default Navbar;","map":null,"metadata":{},"sourceType":"module"}